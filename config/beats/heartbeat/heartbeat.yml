heartbeat.monitors:
#Monitor all containers using an icmp ping
- type: icmp
  schedule: '*/5 * * * * * *'
  hosts: ["filebeat","metricbeat","packetbeat","elasticsearch","kibana","apache2","nginx","mysql"]
  ipv4: true
  ipv6: true
  mode: any
  timeout: 16s
  wait: 1s
#Monitor the ES instance over http with a GET to the /  - checking for a 200 response
- type: http
  enabled: true
  schedule: '@every 5s'
  urls: ["http://elasticsearch:9200"]
  ipv4: true
  ipv6: true
  mode: any
  timeout: 5s
  username: '${ES_USERNAME:elastic}'
  password: '${ES_PASSWORD:changeme}'
  check.request:
    method: "GET"
  check.response:
    status: 200
#Monitor the Kibana instance with a http GET to / - checking for a 200 response code
- type: http
  enabled: true
  schedule: '@every 5s'
  urls: ["http://kibana:5601"]
  ipv4: true
  ipv6: true
  mode: any
  timeout: 5s
  check.request:
    method: "GET"
  check.response:
    status: 200
#Monitor the Nginx instance with a http GET to /server-status - checking for a 200 response code
- type: http
  enabled: true
  schedule: '@every 5s'
  urls: ["http://nginx/server-status"]
  ipv4: true
  ipv6: true
  mode: any
  timeout: 5s
  check.request:
    method: "GET"
  check.response:
    status: 200
#Monitor the Apache2 instance with a http GET to /server-status - checking for a 200 response code
- type: http
  enabled: true
  schedule: '@every 5s'
  urls: ["http://apache2/server-status"]
  ipv4: true
  ipv6: true
  mode: any
  timeout: 5s
  check.request:
    method: "GET"
  check.response:
    status: 200
#Monitor the Mysql instance by attempting a tcp connect on port 3306
- type: tcp
  enabled: true
  schedule: '@every 5s'
  hosts: ["tcp://mysql:3306"]
#Index any heartbeat data to our ES instance
output.elasticsearch:
  hosts: ["elasticsearch:9200"]
logging.to_files: false
